/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tela;

import QueryesPesonalizadas.QueryPagamento;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.RollbackException;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.Acesso;
import modelos.Factory;
import modelos.Pagamento;
import modelos.Produto;
import modelos.Usuario;

/**
 *
 * @author pedro
 */
public class CadastrarPagamentos extends javax.swing.JFrame {

    /**
     * Creates new form Pagamentos
     */
    
    private static CadastrarPagamentos cp;
      public static CadastrarPagamentos getInstancia() {
        if (cp == null) {

            cp = new CadastrarPagamentos();
        }
        return cp;
    }
    public CadastrarPagamentos() {
        initComponents();

        setLocationRelativeTo(null);
         ImageIcon iconEmp = new ImageIcon("src/images/growthcode.png");
        iconEmp.setImage(iconEmp.getImage().getScaledInstance(420, 240, 1));
        jlbImgImp.setIcon(iconEmp);
        jTablePagamento.setRowHeight(28);
    }
    Factory factory = new Factory();
    EntityManager em = factory.retornaEntidadegerenciada();
    private static String nomePesquisado;

    private Pagamento pagamento = new Pagamento();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateComponentFormatter1 = new org.jdatepicker.impl.DateComponentFormatter();
        root = new javax.swing.JPanel();
        cadastrar = new javax.swing.JPanel();
        jtfTipoPagamento = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jbtPesquisar = new javax.swing.JButton();
        jbtSalvar = new javax.swing.JButton();
        jlbImgImp = new javax.swing.JLabel();
        editar = new javax.swing.JPanel();
        jtfPesquisaPorTipoPagamento = new javax.swing.JTextField();
        jbtVoltar3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jbtExcluir1 = new javax.swing.JButton();
        jSrcolpaneInterno = new javax.swing.JScrollPane();
        jTablePagamento = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        root.setLayout(new java.awt.CardLayout());

        jtfTipoPagamento.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jtfTipoPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTipoPagamentoActionPerformed(evt);
            }
        });
        jtfTipoPagamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfTipoPagamentoKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jLabel8.setText("Tipo do pagamento:");

        jbtPesquisar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jbtPesquisar.setText("Pesquisar");
        jbtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPesquisarActionPerformed(evt);
            }
        });

        jbtSalvar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jbtSalvar.setText("Salvar");
        jbtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cadastrarLayout = new javax.swing.GroupLayout(cadastrar);
        cadastrar.setLayout(cadastrarLayout);
        cadastrarLayout.setHorizontalGroup(
            cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cadastrarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlbImgImp, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130))
            .addGroup(cadastrarLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cadastrarLayout.createSequentialGroup()
                        .addComponent(jbtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(274, 274, 274)
                        .addComponent(jbtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cadastrarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jtfTipoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cadastrarLayout.setVerticalGroup(
            cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cadastrarLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtfTipoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jlbImgImp, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtPesquisar)
                    .addComponent(jbtSalvar))
                .addGap(71, 71, 71))
        );

        root.add(cadastrar, "cadastrar");

        jtfPesquisaPorTipoPagamento.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jtfPesquisaPorTipoPagamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfPesquisaPorTipoPagamentoFocusGained(evt);
            }
        });
        jtfPesquisaPorTipoPagamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPesquisaPorTipoPagamentoKeyPressed(evt);
            }
        });

        jbtVoltar3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jbtVoltar3.setText("Voltar");
        jbtVoltar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtVoltar3ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jLabel9.setText("Pesquisar por tipo de pagamento:");

        jbtExcluir1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jbtExcluir1.setText("Excluir");
        jbtExcluir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExcluir1ActionPerformed(evt);
            }
        });

        jSrcolpaneInterno.setBackground(new java.awt.Color(102, 102, 255));
        jSrcolpaneInterno.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jSrcolpaneInterno.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N

        jTablePagamento.setAutoCreateRowSorter(true);
        jTablePagamento.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 15)); // NOI18N
        jTablePagamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo do pagamento", "Tipo do pagamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePagamento.setDoubleBuffered(true);
        jTablePagamento.setDragEnabled(true);
        jTablePagamento.setFillsViewportHeight(true);
        jTablePagamento.setFocusCycleRoot(true);
        jTablePagamento.setFocusTraversalPolicyProvider(true);
        jTablePagamento.setGridColor(new java.awt.Color(0, 51, 255));
        jTablePagamento.setInheritsPopupMenu(true);
        jTablePagamento.setSurrendersFocusOnKeystroke(true);
        jTablePagamento.getTableHeader().setReorderingAllowed(false);
        jTablePagamento.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jTablePagamentoHierarchyChanged(evt);
            }
        });
        jTablePagamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTablePagamentoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTablePagamentoFocusLost(evt);
            }
        });
        jTablePagamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTablePagamentoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTablePagamentoKeyReleased(evt);
            }
        });
        jSrcolpaneInterno.setViewportView(jTablePagamento);
        if (jTablePagamento.getColumnModel().getColumnCount() > 0) {
            jTablePagamento.getColumnModel().getColumn(0).setResizable(false);
            jTablePagamento.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTablePagamento.getColumnModel().getColumn(1).setPreferredWidth(360);
        }

        javax.swing.GroupLayout editarLayout = new javax.swing.GroupLayout(editar);
        editar.setLayout(editarLayout);
        editarLayout.setHorizontalGroup(
            editarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editarLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(editarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(editarLayout.createSequentialGroup()
                        .addComponent(jbtExcluir1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 300, Short.MAX_VALUE)
                        .addComponent(jbtVoltar3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSrcolpaneInterno, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
                    .addComponent(jLabel9)
                    .addComponent(jtfPesquisaPorTipoPagamento))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        editarLayout.setVerticalGroup(
            editarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editarLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtfPesquisaPorTipoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jSrcolpaneInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(editarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtVoltar3)
                    .addComponent(jbtExcluir1))
                .addGap(74, 74, 74))
        );

        root.add(editar, "editar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(root, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(root, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfTipoPagamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTipoPagamentoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jbtSalvar.grabFocus();
        }
    }//GEN-LAST:event_jtfTipoPagamentoKeyPressed

    private void jtfTipoPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTipoPagamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTipoPagamentoActionPerformed

    private void jbtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPesquisarActionPerformed
        CardLayout card = (CardLayout) root.getLayout();
        card.show(root, "editar");
        jtfPesquisaPorTipoPagamento.grabFocus();
    }//GEN-LAST:event_jbtPesquisarActionPerformed

    private void jTablePagamentoHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jTablePagamentoHierarchyChanged

    }//GEN-LAST:event_jTablePagamentoHierarchyChanged

    private void jTablePagamentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTablePagamentoFocusGained

    }//GEN-LAST:event_jTablePagamentoFocusGained

    private void jTablePagamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTablePagamentoFocusLost

    }//GEN-LAST:event_jTablePagamentoFocusLost

    private void jTablePagamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTablePagamentoKeyPressed

    }//GEN-LAST:event_jTablePagamentoKeyPressed

    private void jTablePagamentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTablePagamentoKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int linha = jTablePagamento.getSelectedRow();
            int coluna = jTablePagamento.getSelectedColumn();

            editarPagamento(linha, coluna);

        }
    }//GEN-LAST:event_jTablePagamentoKeyReleased

    private void jtfPesquisaPorTipoPagamentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfPesquisaPorTipoPagamentoFocusGained
        if (jTablePagamento.isEditing()) {
            jTablePagamento.getCellEditor().stopCellEditing();
        }
    }//GEN-LAST:event_jtfPesquisaPorTipoPagamentoFocusGained

    private void jtfPesquisaPorTipoPagamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesquisaPorTipoPagamentoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            nomePesquisado = jtfPesquisaPorTipoPagamento.getText();
            preencherTabelaPorNome(jtfPesquisaPorTipoPagamento.getText());
        }
    }//GEN-LAST:event_jtfPesquisaPorTipoPagamentoKeyPressed

    private void jbtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSalvarActionPerformed

        cadastrar();
        jtfTipoPagamento.grabFocus();
        jtfTipoPagamento.setText("");
    }//GEN-LAST:event_jbtSalvarActionPerformed

    private void jbtVoltar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtVoltar3ActionPerformed
        CardLayout card = (CardLayout) root.getLayout();
        card.show(root, "cadastrar");
        jtfPesquisaPorTipoPagamento.grabFocus();
    }//GEN-LAST:event_jbtVoltar3ActionPerformed

    private void jbtExcluir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExcluir1ActionPerformed
        try {

            int linha = jTablePagamento.getSelectedRow();
            Pagamento p = new Pagamento();
            int id = Integer.parseInt(jTablePagamento.getValueAt(linha, 0).toString());

            p = em.find(Pagamento.class, id);
            int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente Excluir o Pagamento?", "Janela de confirmação", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                em.getTransaction().begin();
                em.remove(p);
                em.getTransaction().commit();
                JOptionPane.showMessageDialog(null, "Pagamento Excluido com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                DefaultTableModel dtm = (DefaultTableModel) jTablePagamento.getModel();

                dtm.removeRow(linha);
                jtfPesquisaPorTipoPagamento.grabFocus();
                jtfPesquisaPorTipoPagamento.setText("");
            }
            if (resposta == JOptionPane.NO_OPTION) {
                jtfPesquisaPorTipoPagamento.grabFocus();
                jtfPesquisaPorTipoPagamento.selectAll();
            }

        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Nenhum usuario selecionado", "Erro", JOptionPane.ERROR_MESSAGE);
            jtfPesquisaPorTipoPagamento.grabFocus();
            jtfPesquisaPorTipoPagamento.selectAll();
        }
    }//GEN-LAST:event_jbtExcluir1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastrarPagamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastrarPagamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastrarPagamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastrarPagamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastrarPagamentos().setVisible(true);
            }
        });
    }

    public List<Pagamento> pesquisaPorNome(String nome) {
        QueryPagamento qp = new QueryPagamento();

        return qp.retornaPagamentoPorTipo(nome);
    }

    public void editarPagamento(int linha, int coluna) {

        String conteudo = jTablePagamento.getValueAt(linha, coluna) + "";
        Pagamento p = new Pagamento();
        p.setId_pagamento(Integer.parseInt(jTablePagamento.getValueAt(linha, 0).toString()));
        p.setTipo_pagamento(jTablePagamento.getValueAt(linha, 1).toString());

        try {

            int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente alterar este Pagamento?", "Janela de Confimação", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.NO_OPTION) {
                // preencherTabelaPorNome(nomePesquisado);
                jtfPesquisaPorTipoPagamento.grabFocus();
                jtfPesquisaPorTipoPagamento.selectAll();
            }
            if (resposta == JOptionPane.YES_OPTION) {
                em.getTransaction().begin();
                em.merge(p);
                em.getTransaction().commit();

                JOptionPane.showMessageDialog(null, "Pagamento Editado com Sucesso!", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                prencherPorId(p);
                jtfPesquisaPorTipoPagamento.grabFocus();
                jtfPesquisaPorTipoPagamento.selectAll();
            }

        } catch (RollbackException e) {
            JOptionPane.showMessageDialog(null, "Houve um erro na tentativa de edição!");
            jtfPesquisaPorTipoPagamento.grabFocus();
        }
    }

    public void prencherPorId(Pagamento p) {
        p = em.find(Pagamento.class, p.getId_pagamento());
        DefaultTableModel dtm = (DefaultTableModel) jTablePagamento.getModel();
        dtm.setNumRows(0);
        dtm.addRow(new Object[]{
            p.getId_pagamento(),
            p.getTipo_pagamento()
        });
    }

    public void preencherTabelaPorNome(String nome) {
        List<Pagamento> lista = new ArrayList<>();
        lista = pesquisaPorNome(nome);

        DefaultTableModel dtm = (DefaultTableModel) jTablePagamento.getModel();
        for (int i = jTablePagamento.getRowCount() - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }
        for (int i = 0; i < lista.size(); i++) {
            dtm.addRow(new Object[]{
                lista.get(i).getId_pagamento(),
                lista.get(i).getTipo_pagamento(),});

        }

    }

    public void cadastrar() {

        pagamento.setTipo_pagamento(jtfTipoPagamento.getText());

        if (jtfTipoPagamento.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Existem alguns campos que não foram preenchidos", "Alerta!", JOptionPane.WARNING_MESSAGE);

        } else {

            try {

                em.getTransaction().begin();
                em.persist(pagamento);
                em.getTransaction().commit();
                JOptionPane.showMessageDialog(null, "Pagamento criado com sucesso!", "alerta", JOptionPane.INFORMATION_MESSAGE);
                em.clear();
                pagamento = new Pagamento();

            } catch (RollbackException e) {

                JOptionPane.showMessageDialog(null, "Não é possivel cadastrar Pagamentos com tipos iguais", "alerta", JOptionPane.ERROR_MESSAGE);
            }

        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel cadastrar;
    private org.jdatepicker.impl.DateComponentFormatter dateComponentFormatter1;
    private javax.swing.JPanel editar;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jSrcolpaneInterno;
    private javax.swing.JTable jTablePagamento;
    private javax.swing.JButton jbtExcluir1;
    private javax.swing.JButton jbtPesquisar;
    private javax.swing.JButton jbtSalvar;
    private javax.swing.JButton jbtVoltar3;
    private javax.swing.JLabel jlbImgImp;
    private javax.swing.JTextField jtfPesquisaPorTipoPagamento;
    private javax.swing.JTextField jtfTipoPagamento;
    private javax.swing.JPanel root;
    // End of variables declaration//GEN-END:variables
}
