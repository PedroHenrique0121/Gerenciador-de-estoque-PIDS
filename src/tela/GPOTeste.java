/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tela;

import QueryesPesonalizadas.QueryPedido;
import QueryesPesonalizadas.QueryesCliente;
import QueryesPesonalizadas.QueryesProduto;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;

import modellosUteis.PedidoCompletoo;
import modellosUteis.PedidoParaRelatorio;
import modellosUteis.VerificacaoLoginUsuario;
import modelos.Cliente;
import modelos.Conexao;
import modelos.Factory;
import modelos.Pedido;
import modelos.PedidoProduto;
import modelos.Produto;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import org.joda.time.LocalDate;

/**
 *
 * @author pedro
 */
public class GPOTeste extends javax.swing.JFrame {

    Produto produto;
    List<PedidoProduto> listaPp = new ArrayList<>();
    /**
     * Creates new form PedidoRelatorio
     */
    Factory fac = new Factory();
    EntityManager em = fac.retornaEntidadegerenciada();

    private static GPOTeste geracao;

    public static GPOTeste getInstancia() {
        if (geracao == null) {
            geracao = new GPOTeste();
        }
        return geracao;
    }

    public GPOTeste() {
        initComponents();
        setLocationRelativeTo(null);

        ImageIcon iconEmp = new ImageIcon("src/images/growthcode.png");
        iconEmp.setImage(iconEmp.getImage().getScaledInstance(336, 209, 1));
        jlbImgImp.setIcon(iconEmp);
        jtfCodigoUsuario.setText(/*VerificacaoLoginUsuario.userStatic.getId()*/"1234");
        jtfNomeVendedor.setText(/*VerificacaoLoginUsuario.userStatic.getNome()*/"Exemplo...");
        jtablePedido.setRowHeight(30);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        root = new javax.swing.JPanel();
        inicio = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtfCodigoCliente = new javax.swing.JTextField();
        jtfNomeCliente = new javax.swing.JTextField();
        jbtPesquisarCliente = new javax.swing.JButton();
        jbtBuscarPorPedido = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jlbImgImp = new javax.swing.JLabel();
        jtfNomeVendedor = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtfCodigoUsuario = new javax.swing.JTextField();
        cliente = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jSrcolpaneInterno2 = new javax.swing.JScrollPane();
        jTableCliente = new javax.swing.JTable();
        jtfPesquisaPorNomeCliente = new javax.swing.JTextField();
        jbtFechar1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        raiz = new javax.swing.JPanel();
        gera√ßao = new javax.swing.JPanel();
        jlbResults = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jbtadicionar = new javax.swing.JButton();
        jSrcolpaneInterno1 = new javax.swing.JScrollPane();
        jtablePedido = new javax.swing.JTable();
        PanelPesquisar = new javax.swing.JPanel();
        jbtVoltar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jtfPesquisaPorNomoProduto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jSrcolpaneInterno = new javax.swing.JScrollPane();
        jtableProduto = new javax.swing.JTable();
        jbtExcluir = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfValorTotal = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfquantidadeItens = new javax.swing.JTextField();
        jcbGeracao = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        root.setLayout(new java.awt.CardLayout());

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel2.setText("Codigo:");

        jtfCodigoCliente.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jtfCodigoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodigoClienteActionPerformed(evt);
            }
        });

        jtfNomeCliente.setEditable(false);
        jtfNomeCliente.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jtfNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNomeClienteActionPerformed(evt);
            }
        });

        jbtPesquisarCliente.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jbtPesquisarCliente.setText("...");
        jbtPesquisarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPesquisarClienteActionPerformed(evt);
            }
        });

        jbtBuscarPorPedido.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jbtBuscarPorPedido.setText("Buscar por Pedido");
        jbtBuscarPorPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtBuscarPorPedidoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel4.setText("Nome do Cliente");

        jtfNomeVendedor.setEditable(false);
        jtfNomeVendedor.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jtfNomeVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNomeVendedorActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel6.setText("Nome do Vendedor:");

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel8.setText("Codigo:");

        jtfCodigoUsuario.setEditable(false);
        jtfCodigoUsuario.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jtfCodigoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodigoUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout inicioLayout = new javax.swing.GroupLayout(inicio);
        inicio.setLayout(inicioLayout);
        inicioLayout.setHorizontalGroup(
            inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inicioLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inicioLayout.createSequentialGroup()
                        .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtfCodigoUsuario)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtfCodigoCliente)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)))
                        .addGap(26, 26, 26)
                        .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(inicioLayout.createSequentialGroup()
                                .addComponent(jtfNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbtPesquisarCliente))
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jlbImgImp, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtfNomeVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jbtBuscarPorPedido))
                .addContainerGap(238, Short.MAX_VALUE))
        );
        inicioLayout.setVerticalGroup(
            inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inicioLayout.createSequentialGroup()
                .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(inicioLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlbImgImp, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inicioLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtPesquisarCliente))
                        .addGap(15, 15, 15)
                        .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfNomeVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(inicioLayout.createSequentialGroup()
                                .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfCodigoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 263, Short.MAX_VALUE)
                        .addComponent(jbtBuscarPorPedido)))
                .addGap(48, 48, 48))
        );

        root.add(inicio, "inicio");

        jSrcolpaneInterno2.setBackground(new java.awt.Color(102, 102, 255));
        jSrcolpaneInterno2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N

        jTableCliente.setAutoCreateRowSorter(true);
        jTableCliente.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 15)); // NOI18N
        jTableCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo ", "Nome do  Cliente", "Cpf/cnpj", "Contato"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCliente.setDoubleBuffered(true);
        jTableCliente.setDragEnabled(true);
        jTableCliente.setFillsViewportHeight(true);
        jTableCliente.setFocusCycleRoot(true);
        jTableCliente.setFocusTraversalPolicyProvider(true);
        jTableCliente.setGridColor(new java.awt.Color(0, 51, 255));
        jTableCliente.setInheritsPopupMenu(true);
        jTableCliente.setSurrendersFocusOnKeystroke(true);
        jTableCliente.getTableHeader().setReorderingAllowed(false);
        jTableCliente.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jTableClienteHierarchyChanged(evt);
            }
        });
        jTableCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTableClienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTableClienteFocusLost(evt);
            }
        });
        jTableCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClienteMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableClienteMousePressed(evt);
            }
        });
        jTableCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableClienteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableClienteKeyReleased(evt);
            }
        });
        jSrcolpaneInterno2.setViewportView(jTableCliente);
        if (jTableCliente.getColumnModel().getColumnCount() > 0) {
            jTableCliente.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTableCliente.getColumnModel().getColumn(1).setPreferredWidth(180);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSrcolpaneInterno2, javax.swing.GroupLayout.DEFAULT_SIZE, 934, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jSrcolpaneInterno2, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 40, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel2);

        jtfPesquisaPorNomeCliente.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jtfPesquisaPorNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPesquisaPorNomeClienteActionPerformed(evt);
            }
        });
        jtfPesquisaPorNomeCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPesquisaPorNomeClienteKeyPressed(evt);
            }
        });

        jbtFechar1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jbtFechar1.setText("Fechar");
        jbtFechar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtFechar1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jLabel5.setText("Pesquisa por nome do cliente:");

        javax.swing.GroupLayout clienteLayout = new javax.swing.GroupLayout(cliente);
        cliente.setLayout(clienteLayout);
        clienteLayout.setHorizontalGroup(
            clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, clienteLayout.createSequentialGroup()
                .addGroup(clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(clienteLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtFechar1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, clienteLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 950, Short.MAX_VALUE)
                            .addComponent(jtfPesquisaPorNomeCliente))))
                .addGap(40, 40, 40))
            .addGroup(clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(clienteLayout.createSequentialGroup()
                    .addGap(39, 39, 39)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 950, Short.MAX_VALUE)
                    .addGap(39, 39, 39)))
        );
        clienteLayout.setVerticalGroup(
            clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clienteLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtfPesquisaPorNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 373, Short.MAX_VALUE)
                .addComponent(jbtFechar1)
                .addGap(22, 22, 22))
            .addGroup(clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(clienteLayout.createSequentialGroup()
                    .addGap(136, 136, 136)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(126, Short.MAX_VALUE)))
        );

        root.add(cliente, "cliente");

        jTabbedPane1.addTab("Dados Gerais do Pedido", root);

        raiz.setLayout(new java.awt.CardLayout());

        jlbResults.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N

        jButton2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jButton2.setText("Remover");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jbtadicionar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jbtadicionar.setText("adicionar");
        jbtadicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtadicionarActionPerformed(evt);
            }
        });

        jSrcolpaneInterno1.setBackground(new java.awt.Color(102, 102, 255));
        jSrcolpaneInterno1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jSrcolpaneInterno1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jSrcolpaneInterno1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N

        jtablePedido.setAutoCreateRowSorter(true);
        jtablePedido.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jtablePedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Descri√ß√£o do Produto", "Pre√ßo de venda", "Qtd", "Valor de compra"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtablePedido.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jtablePedido.setDoubleBuffered(true);
        jtablePedido.setDragEnabled(true);
        jtablePedido.setEditingRow(jtablePedido.getEditingRow());
        jtablePedido.setFillsViewportHeight(true);
        jtablePedido.setFocusCycleRoot(true);
        jtablePedido.setFocusTraversalPolicyProvider(true);
        jtablePedido.setGridColor(new java.awt.Color(0, 51, 255));
        jtablePedido.setInheritsPopupMenu(true);
        jtablePedido.setOpaque(false);
        jtablePedido.setRowHeight(18);
        jtablePedido.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jtablePedido.setSurrendersFocusOnKeystroke(true);
        jtablePedido.getTableHeader().setReorderingAllowed(false);
        jtablePedido.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jtablePedidoHierarchyChanged(evt);
            }
        });
        jtablePedido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtablePedidoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtablePedidoFocusLost(evt);
            }
        });
        jtablePedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtablePedidoMouseClicked(evt);
            }
        });
        jtablePedido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtablePedidoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtablePedidoKeyReleased(evt);
            }
        });
        jSrcolpaneInterno1.setViewportView(jtablePedido);
        jtablePedido.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jtablePedido.getColumnModel().getColumnCount() > 0) {
            jtablePedido.getColumnModel().getColumn(0).setPreferredWidth(40);
            jtablePedido.getColumnModel().getColumn(1).setPreferredWidth(250);
            jtablePedido.getColumnModel().getColumn(3).setPreferredWidth(40);
        }

        javax.swing.GroupLayout gera√ßaoLayout = new javax.swing.GroupLayout(gera√ßao);
        gera√ßao.setLayout(gera√ßaoLayout);
        gera√ßaoLayout.setHorizontalGroup(
            gera√ßaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gera√ßaoLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(gera√ßaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtadicionar)
                    .addGroup(gera√ßaoLayout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(389, 389, 389)
                        .addComponent(jlbResults, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(311, 311, 311))
            .addGroup(gera√ßaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gera√ßaoLayout.createSequentialGroup()
                    .addContainerGap(47, Short.MAX_VALUE)
                    .addComponent(jSrcolpaneInterno1, javax.swing.GroupLayout.PREFERRED_SIZE, 938, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(43, 43, 43)))
        );
        gera√ßaoLayout.setVerticalGroup(
            gera√ßaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gera√ßaoLayout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(jbtadicionar)
                .addGap(344, 344, 344)
                .addGroup(gera√ßaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gera√ßaoLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jButton2))
                    .addComponent(jlbResults, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7))
            .addGroup(gera√ßaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(gera√ßaoLayout.createSequentialGroup()
                    .addGap(183, 183, 183)
                    .addComponent(jSrcolpaneInterno1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(184, Short.MAX_VALUE)))
        );

        raiz.add(gera√ßao, "geracao");

        jbtVoltar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jbtVoltar.setText("Voltar");
        jbtVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtVoltarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jLabel7.setText("Pesquisa por descri√ß√£o do produto:");

        jtfPesquisaPorNomoProduto.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jtfPesquisaPorNomoProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfPesquisaPorNomoProdutoFocusGained(evt);
            }
        });
        jtfPesquisaPorNomoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPesquisaPorNomoProdutoKeyPressed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jSrcolpaneInterno.setBackground(new java.awt.Color(102, 102, 255));
        jSrcolpaneInterno.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jSrcolpaneInterno.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jSrcolpaneInterno.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N

        jtableProduto.setAutoCreateRowSorter(true);
        jtableProduto.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 15)); // NOI18N
        jtableProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Descri√ß√£o do Produto", "Pre√ßo de custo", "Pre√ßo de venda", "Estoques", "Fornecedor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtableProduto.setDoubleBuffered(true);
        jtableProduto.setDragEnabled(true);
        jtableProduto.setFillsViewportHeight(true);
        jtableProduto.setFocusCycleRoot(true);
        jtableProduto.setFocusTraversalPolicyProvider(true);
        jtableProduto.setGridColor(new java.awt.Color(0, 51, 255));
        jtableProduto.setInheritsPopupMenu(true);
        jtableProduto.setSurrendersFocusOnKeystroke(true);
        jtableProduto.getTableHeader().setReorderingAllowed(false);
        jtableProduto.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jtableProdutoHierarchyChanged(evt);
            }
        });
        jtableProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtableProdutoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtableProdutoFocusLost(evt);
            }
        });
        jtableProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableProdutoMouseClicked(evt);
            }
        });
        jtableProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtableProdutoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtableProdutoKeyReleased(evt);
            }
        });
        jSrcolpaneInterno.setViewportView(jtableProduto);
        if (jtableProduto.getColumnModel().getColumnCount() > 0) {
            jtableProduto.getColumnModel().getColumn(0).setPreferredWidth(30);
            jtableProduto.getColumnModel().getColumn(1).setPreferredWidth(220);
            jtableProduto.getColumnModel().getColumn(2).setPreferredWidth(80);
            jtableProduto.getColumnModel().getColumn(3).setPreferredWidth(80);
            jtableProduto.getColumnModel().getColumn(4).setPreferredWidth(80);
            jtableProduto.getColumnModel().getColumn(5).setPreferredWidth(30);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSrcolpaneInterno, javax.swing.GroupLayout.DEFAULT_SIZE, 992, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSrcolpaneInterno, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel5);

        jbtExcluir.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jbtExcluir.setText("Excluir");
        jbtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelPesquisarLayout = new javax.swing.GroupLayout(PanelPesquisar);
        PanelPesquisar.setLayout(PanelPesquisarLayout);
        PanelPesquisarLayout.setHorizontalGroup(
            PanelPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPesquisarLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(PanelPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPesquisarLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelPesquisarLayout.createSequentialGroup()
                        .addGroup(PanelPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfPesquisaPorNomoProduto, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelPesquisarLayout.createSequentialGroup()
                                .addComponent(jbtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 625, Short.MAX_VALUE)
                                .addComponent(jbtVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 905, Short.MAX_VALUE))
                        .addGap(75, 75, 75))))
        );
        PanelPesquisarLayout.setVerticalGroup(
            PanelPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelPesquisarLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfPesquisaPorNomoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(PanelPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtVoltar)
                    .addComponent(jbtExcluir))
                .addGap(134, 134, 134))
        );

        raiz.add(PanelPesquisar, "pesquisar");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1028, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(raiz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 549, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(raiz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Produtos", jPanel3);

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel1.setText("Valor total do pedido:");

        jtfValorTotal.setEditable(false);
        jtfValorTotal.setBackground(new java.awt.Color(255, 255, 102));
        jtfValorTotal.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel3.setText("Quantidade de  itens:");

        jtfquantidadeItens.setEditable(false);
        jtfquantidadeItens.setBackground(new java.awt.Color(0, 204, 204));
        jtfquantidadeItens.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N

        jcbGeracao.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jcbGeracao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gerar relatorio do pedido" }));
        jcbGeracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbGeracaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jcbGeracao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfquantidadeItens)
                    .addComponent(jtfValorTotal))
                .addContainerGap(410, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfquantidadeItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addComponent(jcbGeracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(269, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Finaliza√ß√£o", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNomeClienteActionPerformed

    private void jbtBuscarPorPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtBuscarPorPedidoActionPerformed
        List<Produto> produtos = new ArrayList<>();
        QueryesProduto qp = new QueryesProduto();

        produtos = qp.retornaTodos();
        HashMap params = new HashMap<>();
        params.put("valorTotalProdutos", "200,00");
        params.put("cliente", "Pedro Henrique Gomes Dourado");
        for (Produto produto : produtos) {
            System.out.println(produto.getDescricaoProduto());
        }
        System.out.println(produtos.size());
        JasperPrint jp = null;
        try {
            jp = JasperFillManager.fillReport("src/relatorio/r/pedido.jasper", params, new JRBeanCollectionDataSource(produtos, false));
        } catch (JRException ex) {
            Logger.getLogger(GPOTeste.class.getName()).log(Level.SEVERE, null, ex);
        }
        JasperViewer jv = new JasperViewer(jp, false);

        jv.setVisible(true);

    }//GEN-LAST:event_jbtBuscarPorPedidoActionPerformed

    private void jtfCodigoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodigoClienteActionPerformed
        try {

            int idCliente = Integer.parseInt(jtfCodigoCliente.getText());
            jtfNomeCliente.setText(em.find(Cliente.class, idCliente).getNome_cliente());

        } catch (NullPointerException e) {
            jtfCodigoCliente.selectAll();
            JOptionPane.showMessageDialog(null, "Cliente n√£o cadastrado!");
        } catch (NumberFormatException e) {
            jtfNomeCliente.setText("");
            JOptionPane.showMessageDialog(null, "Campo codigo n√£o pode ser vazio!");
        }
    }//GEN-LAST:event_jtfCodigoClienteActionPerformed

    private void jTableClienteHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jTableClienteHierarchyChanged

    }//GEN-LAST:event_jTableClienteHierarchyChanged

    private void jTableClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTableClienteFocusGained

    }//GEN-LAST:event_jTableClienteFocusGained

    private void jTableClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTableClienteFocusLost

    }//GEN-LAST:event_jTableClienteFocusLost

    private void jTableClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClienteMouseClicked

        jtfCodigoCliente.setText(jTableCliente.getValueAt(jTableCliente.getSelectedRow(), 0).toString());
        jtfNomeCliente.setText(jTableCliente.getValueAt(jTableCliente.getSelectedRow(), 1).toString());
        CardLayout card = (CardLayout) root.getLayout();
        card.show(root, "inicio");
    }//GEN-LAST:event_jTableClienteMouseClicked

    private void jTableClienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClienteMousePressed
        /*int linha = jTableFornecedor.getSelectedRow();
        int resposta = JOptionPane.showConfirmDialog(null, "Forncedor selelionado: " + jTableFornecedor.getValueAt(linha, 1).toString() + "", "Escolha de Fornecedor", JOptionPane.YES_NO_OPTION);

        if (resposta == JOptionPane.YES_OPTION) {

            FornecedorUtil.setForncedorUtil(em.find(Fornecedor.class,jTableFornecedor.getValueAt(linha,0) ));
            this.setVisible(false);

        } else if (resposta == JOptionPane.NO_OPTION) {

        }*/
    }//GEN-LAST:event_jTableClienteMousePressed

    private void jTableClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableClienteKeyPressed

    }//GEN-LAST:event_jTableClienteKeyPressed

    private void jTableClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableClienteKeyReleased

    }//GEN-LAST:event_jTableClienteKeyReleased

    private void jtfPesquisaPorNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPesquisaPorNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfPesquisaPorNomeClienteActionPerformed

    private void jtfPesquisaPorNomeClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesquisaPorNomeClienteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            List<Cliente> lista = new ArrayList<>();
            lista = pesquisaPorNome(jtfPesquisaPorNomeCliente.getText());

            DefaultTableModel dtm = (DefaultTableModel) jTableCliente.getModel();
            dtm.setNumRows(0);
            for (int i = 0; i < lista.size(); i++) {
                dtm.addRow(new Object[]{
                    lista.get(i).getId_cliente(),
                    lista.get(i).getNome_cliente(),
                    lista.get(i).getCpf_cliente(), // lista.get(i).getTelefone(),
                });

            }

        }
    }//GEN-LAST:event_jtfPesquisaPorNomeClienteKeyPressed

    private void jbtFechar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtFechar1ActionPerformed
        CardLayout card = (CardLayout) root.getLayout();
        card.show(root, "inicio");
    }//GEN-LAST:event_jbtFechar1ActionPerformed

    private void jbtPesquisarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPesquisarClienteActionPerformed
        CardLayout card = (CardLayout) root.getLayout();
        card.show(root, "cliente");
    }//GEN-LAST:event_jbtPesquisarClienteActionPerformed

    private void jtfNomeVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNomeVendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNomeVendedorActionPerformed

    private void jtfCodigoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodigoUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodigoUsuarioActionPerformed

    private void jcbGeracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbGeracaoActionPerformed
        if (jcbGeracao.getSelectedIndex() == 0) {
            if (jtfValorTotal.getText().equals("") || jtfNomeCliente.getText().equals("") || jtfNomeVendedor.getText().equals("")
                    || jtfquantidadeItens.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "ainda n√£o √© possivel gerar relatorios, Preencha todas as informa√ß√ßoes necessarias!");
            } else {
                criarPedido(listaPp);
            }
        }
    }//GEN-LAST:event_jcbGeracaoActionPerformed

    private void jbtadicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtadicionarActionPerformed

        DefaultTableModel dtm = (DefaultTableModel) jtablePedido.getModel();     
    

        try {
            dtm.insertRow(0, new Object[]{"", "", "", "", ""});
        } catch (NullPointerException e) {
            System.out.println("nao da");
        }
        
       
        //limparCamposPedido();
        //finalizarPedido();
    }//GEN-LAST:event_jbtadicionarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {

            // int linha = JtableVenda1.getSelectedRow();
            int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente Excluir o Produto?", "Janela de confirma√ß√£o", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                //    DefaultTableModel dtm = (DefaultTableModel) JtableVenda1.getModel();
                //  dtm.removeRow(linha);
                finalizarPedido();
                JOptionPane.showMessageDialog(null, "Produto Excluido com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);

            }
            if (resposta == JOptionPane.NO_OPTION) {

            }

        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Nenhum Produto selecionado", "Erro", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jbtVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtVoltarActionPerformed
        CardLayout card = (CardLayout) raiz.getLayout();
        card.show(raiz, "salvar");


    }//GEN-LAST:event_jbtVoltarActionPerformed

    private void jtfPesquisaPorNomoProdutoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfPesquisaPorNomoProdutoFocusGained
        if (jtableProduto.isEditing()) {
            jtableProduto.getCellEditor().stopCellEditing();
        }
    }//GEN-LAST:event_jtfPesquisaPorNomoProdutoFocusGained

    private void jtfPesquisaPorNomoProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesquisaPorNomoProdutoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            List<Produto> lista = new ArrayList<>();
            QueryesProduto qp = new QueryesProduto();
            lista = qp.retornaProdutoPorNome(jtfPesquisaPorNomoProduto.getText());

            DefaultTableModel dtm = (DefaultTableModel) jtableProduto.getModel();

            // JtableVenda1.setCellSelectionEnabled(true);
            // jtableProduto.getColumnModel().getColumn(2).setCellEditor( new );
            for (int i = jtableProduto.getRowCount() - 1; i >= 0; i--) {
                dtm.removeRow(i);
            }
            for (int i = 0; i < lista.size(); i++) {
                dtm.addRow(new Object[]{
                    lista.get(i).getId(),
                    lista.get(i).getDescricaoProduto(),
                    lista.get(i).getPrecoCustoProduto(),
                    lista.get(i).getPrecoVendaProduto(),
                    lista.get(i).getEstoqueProduto(),
                    lista.get(i).getFornecedor().getId()

                });

            }

        }
    }//GEN-LAST:event_jtfPesquisaPorNomoProdutoKeyPressed

    private void jtableProdutoHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jtableProdutoHierarchyChanged

    }//GEN-LAST:event_jtableProdutoHierarchyChanged

    private void jtableProdutoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtableProdutoFocusGained

    }//GEN-LAST:event_jtableProdutoFocusGained

    private void jtableProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtableProdutoFocusLost

    }//GEN-LAST:event_jtableProdutoFocusLost

    private void jtableProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtableProdutoKeyPressed

    }//GEN-LAST:event_jtableProdutoKeyPressed

    private void jtableProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtableProdutoKeyReleased

    }//GEN-LAST:event_jtableProdutoKeyReleased

    private void jbtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExcluirActionPerformed
        try {

            int linha = jtableProduto.getSelectedRow();

            int id = Integer.parseInt(jtableProduto.getValueAt(linha, 0).toString());

            Produto produto = new Produto();
            produto = em.find(Produto.class, id);
            int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente Excluir o Produto?", "Janela de confirma√ß√£o", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                em.getTransaction().begin();
                em.remove(produto);
                em.getTransaction().commit();

                JOptionPane.showMessageDialog(null, "Produto Excluido com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                DefaultTableModel dtm = (DefaultTableModel) jtableProduto.getModel();

                dtm.removeRow(linha);
                jtfPesquisaPorNomoProduto.grabFocus();
                jtfPesquisaPorNomoProduto.setText("");
            }
            if (resposta == JOptionPane.NO_OPTION) {
                jtfPesquisaPorNomoProduto.grabFocus();
                jtfPesquisaPorNomoProduto.selectAll();
            }

        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Nenhum Produto selecionado", "Erro", JOptionPane.ERROR_MESSAGE);
            jtfPesquisaPorNomoProduto.grabFocus();
            jtfPesquisaPorNomoProduto.selectAll();
        }
    }//GEN-LAST:event_jbtExcluirActionPerformed

    private void jtableProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableProdutoMouseClicked

        produto = em.find(Produto.class, jtableProduto.getValueAt(jtableProduto.getSelectedRow(), 0));
        //u jtfCodigo.setText(produto.getId()+"");
        //jtfDescritivo.setText(produto.getDescricaoProduto());
        CardLayout card = (CardLayout) raiz.getLayout();
        card.show(raiz, "geracao");

    }//GEN-LAST:event_jtableProdutoMouseClicked

    private void jtablePedidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtablePedidoKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if(jtablePedido.getSelectedColumn()==0){
                Produto pro = null;
            int linha = 0;
            try {
                linha = jtablePedido.getSelectedRow();
                
                int id = Integer.parseInt(jtablePedido.getValueAt(linha, 0).toString());
                pro = em.find(Produto.class, id);
                jtablePedido.setValueAt(pro.getDescricaoProduto(), linha, 1);
                jtablePedido.setValueAt(pro.getPrecoVendaProduto(), linha, 2);
                jtablePedido.setValueAt("0.00", linha, 3);
                 jtablePedido.setValueAt("0.00", linha, 4);
                jtablePedido.editCellAt(linha, 3);
            } catch (NullPointerException e) {
                jtablePedido.setValueAt(pro.getDescricaoProduto(), linha, 1);
                jtablePedido.setValueAt(pro.getDescricaoProduto(), linha, 1);
                jtablePedido.setValueAt(pro.getPrecoVendaProduto(), linha, 2);
                jtablePedido.setValueAt(0.00, linha, 3);
                JOptionPane.showMessageDialog(null, "Produto n√£o cadastrado");
            } 
            }else{
              if (jtablePedido.isEditing()) {
            jtablePedido.getCellEditor().stopCellEditing();
        }
            }
            
           
        }
    }//GEN-LAST:event_jtablePedidoKeyReleased

    private void jtablePedidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtablePedidoKeyPressed

    }//GEN-LAST:event_jtablePedidoKeyPressed

    private void jtablePedidoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtablePedidoFocusLost

    }//GEN-LAST:event_jtablePedidoFocusLost

    private void jtablePedidoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtablePedidoFocusGained

    }//GEN-LAST:event_jtablePedidoFocusGained

    private void jtablePedidoHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jtablePedidoHierarchyChanged

    }//GEN-LAST:event_jtablePedidoHierarchyChanged

    private void jtablePedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtablePedidoMouseClicked
             
               // JOptionPane.showMessageDialog(null,  jtablePedido.getS);        
    }//GEN-LAST:event_jtablePedidoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GPOTeste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GPOTeste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GPOTeste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GPOTeste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GPOTeste().setVisible(true);
            }
        });
    }

    public void limparCamposPedido() {
//        jtfCodigo.setText("");
//        jtfDescritivo.setText("");
//        jtfQuantidade.setText("");

    }

    public void finalizarPedido() {

        listaPp = new ArrayList();

        /* for (int i = 0; i < JtableVenda1.getRowCount(); i++) {
            Produto pro = new Produto();
            PedidoProduto pedidoProduto = new PedidoProduto();
            pro.setId((int) JtableVenda1.getValueAt(i, 0));
            pro.setDescricaoProduto(JtableVenda1.getValueAt(i, 1).toString());
            pro.setPrecoVendaProduto((Double) JtableVenda1.getValueAt(i, 3));
            pedidoProduto.setProduto(pro);
            pedidoProduto.setQuantidade_pedido_produto(Integer.parseInt((String) JtableVenda1.getValueAt(i, 2)));
            pedidoProduto.setTotalPedidoProduto(Double.parseDouble(JtableVenda1.getValueAt(i, 4).toString().replaceAll(",", ".")));

            listaPp.add(pedidoProduto);

        }*/
        double valorTotal = 0;
        for (PedidoProduto p : listaPp) {
            valorTotal += p.getTotalPedidoProduto();
        }
        jtfValorTotal.setText(String.valueOf(valorTotal).format("%.2f", valorTotal));
        jtfquantidadeItens.setText(listaPp.size() + "");
    }

    public List<PedidoCompletoo> buscarPedido(int idCliente, String data) {
        QueryPedido qp = new QueryPedido();
        return qp.retornaPedido(idCliente, data);

    }

    public List<Cliente> pesquisaPorNome(String nome) {
        QueryesCliente qc = new QueryesCliente();
        return qc.retornaClientePorNome(nome);
    }

    public void criarPedido(List<PedidoProduto> lista) {
        List<PedidoParaRelatorio> p = new ArrayList<>();

        for (int i = 0; i < lista.size(); i++) {
            PedidoParaRelatorio pedido = new PedidoParaRelatorio();
            pedido.setId(lista.get(i).getProduto().getId());
            pedido.setDescricaoProduto(lista.get(i).getProduto().getDescricaoProduto());
            pedido.setPrecoVendaProduto(lista.get(i).getProduto().getPrecoVendaProduto());
            pedido.setQtd(lista.get(i).getQuantidade_pedido_produto());
            pedido.setValorCompra(lista.get(i).getTotalPedidoProduto());
            p.add(pedido);
        }

        HashMap params = new HashMap<>();
        params.put("valorTotalProdutos", jtfValorTotal.getText());
        params.put("cliente", jtfNomeCliente.getText());

        // System.out.println(produtos.size());
        JasperPrint jp = null;
        try {
            jp = JasperFillManager.fillReport("src/relatorio/r/pedido.jasper", params, new JRBeanCollectionDataSource(p, false));
        } catch (JRException ex) {
            Logger.getLogger(GPOTeste.class.getName()).log(Level.SEVERE, null, ex);
        }
        JasperViewer jv = new JasperViewer(jp, false);

        jv.setVisible(true);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelPesquisar;
    private javax.swing.JPanel cliente;
    private javax.swing.JPanel gera√ßao;
    private javax.swing.JPanel inicio;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jSrcolpaneInterno;
    private javax.swing.JScrollPane jSrcolpaneInterno1;
    private javax.swing.JScrollPane jSrcolpaneInterno2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableCliente;
    private javax.swing.JButton jbtBuscarPorPedido;
    private javax.swing.JButton jbtExcluir;
    private javax.swing.JButton jbtFechar1;
    private javax.swing.JButton jbtPesquisarCliente;
    private javax.swing.JButton jbtVoltar;
    private javax.swing.JButton jbtadicionar;
    private javax.swing.JComboBox<String> jcbGeracao;
    private javax.swing.JLabel jlbImgImp;
    private javax.swing.JLabel jlbResults;
    private javax.swing.JTable jtablePedido;
    private javax.swing.JTable jtableProduto;
    private javax.swing.JTextField jtfCodigoCliente;
    private javax.swing.JTextField jtfCodigoUsuario;
    private javax.swing.JTextField jtfNomeCliente;
    private javax.swing.JTextField jtfNomeVendedor;
    private javax.swing.JTextField jtfPesquisaPorNomeCliente;
    private javax.swing.JTextField jtfPesquisaPorNomoProduto;
    private javax.swing.JTextField jtfValorTotal;
    private javax.swing.JTextField jtfquantidadeItens;
    private javax.swing.JPanel raiz;
    private javax.swing.JPanel root;
    // End of variables declaration//GEN-END:variables
}
