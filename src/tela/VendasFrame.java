/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tela;

//import Repository.PedidosRepositorio;
//import Manger.Factory;
import modellosUteis.VerificacaoLoginUsuario;
import QueryesPesonalizadas.Querys;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import modelos.Pedido;
import modelos.Produto;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import modelos.Cliente;
import modelos.Conexao;
import modelos.Factory;
import modelos.Pagamento;
import modelos.PedidoProduto;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.xml.JasperPrintFactory;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Pedro Henrique Gomes
 */
@SuppressWarnings("InitializerMayBeStatic")
public class VendasFrame extends javax.swing.JFrame {

    public static JFrame m;
    List<Pagamento> listaPagamentos;
    Pagamento pagamento = new Pagamento();
    Produto produto = new Produto();
    Factory factory = new Factory();

    Cliente clientep = null;

    EntityManager jpa = factory.retornaEntidadegerenciada();

    ArrayList<Produto> produtosTabela = new ArrayList<>();
    Connection con = null;
    public static VendasFrame vf;
    
    public static VendasFrame getInstancia() throws SQLException, ClassNotFoundException{
        if(vf==null){
            vf= new VendasFrame();
        }
       return vf;
    }
    /**
     * Creates new form frame2
     */
    public VendasFrame() throws SQLException, ClassNotFoundException {
        initComponents();
        setLocationRelativeTo(null);
        jtfCodigoProduto.grabFocus();
        DefaultTableCellRenderer tableCellRenderer = new DefaultTableCellRenderer();
        tableCellRenderer.setBackground(Color.getHSBColor(50, 1, 30));
        tableCellRenderer.setForeground(Color.WHITE);
        jScrollPane8.getViewport().setBackground(Color.WHITE);
        con = Conexao.conecta();
        for (int i = 0; i < JtableVenda1.getModel().getColumnCount(); i++) {
            JtableVenda1.getColumnModel().getColumn(i).setHeaderRenderer(tableCellRenderer);
        }
        ImageIcon iconEmp = new ImageIcon("src/images/growthcode.png");
        iconEmp.setImage(iconEmp.getImage().getScaledInstance(270, 160, 1));

        ImageIcon imagemp = new ImageIcon("src/images/growthcode.png");
        imagemp.setImage(iconEmp.getImage().getScaledInstance(337, 200, 1));

        lblImagemLogo.setIcon(iconEmp);
//        lblImagemPagamento.setIcon(imagemp);
       
        DefaultListCellRenderer renderer = (DefaultListCellRenderer) jListaPagamentos.getCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.CENTER);
        assegurarInputs();
        this.setExtendedState(VendasFrame.MAXIMIZED_BOTH);
         CardLayout card = (CardLayout) root.getLayout();
        card.show(root, "inicio");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        entityManager1 = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("jpaPU").createEntityManager();
        jtfAreaDeVendaProdutoCodigo1 = new javax.swing.JTextField();
        painelAreaTrablaho = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        JtableVenda1 = new javax.swing.JTable();
        jtfDescritivoProduto1 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jtfValorDeQuantidadeVezesValorDeVenda = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jtfValorTotal1 = new javax.swing.JTextField();
        jtfQuantidadeAVender1 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jtfValorDeVenda1 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        root = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        painelCliente = new javax.swing.JPanel();
        jtfCpfCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblImagemLogo = new javax.swing.JLabel();
        jtfCodigoProduto = new javax.swing.JTextField();
        menu = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListaPagamentos = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        finalizar = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        itmMostrarMenu = new javax.swing.JMenuItem();
        itmConsultar = new javax.swing.JMenuItem();
        itmAdicionarItem = new javax.swing.JMenuItem();
        itmEditar = new javax.swing.JMenuItem();
        itmExcluir = new javax.swing.JMenuItem();
        itmFinalizarVenda = new javax.swing.JMenuItem();
        jtmSelecionarCliente = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        jtfAreaDeVendaProdutoCodigo1.setBackground(new java.awt.Color(255, 255, 102));
        jtfAreaDeVendaProdutoCodigo1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jtfAreaDeVendaProdutoCodigo1.setInheritsPopupMenu(true);
        jtfAreaDeVendaProdutoCodigo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfAreaDeVendaProdutoCodigo1ActionPerformed(evt);
            }
        });
        jtfAreaDeVendaProdutoCodigo1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfAreaDeVendaProdutoCodigo1KeyPressed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 0, 51));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        painelAreaTrablaho.setBackground(new java.awt.Color(255, 0, 0));
        painelAreaTrablaho.setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 0, 0));

        jScrollPane8.setBorder(null);
        jScrollPane8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 15)); // NOI18N
        jScrollPane8.setInheritsPopupMenu(true);

        JtableVenda1.setAutoCreateRowSorter(true);
        JtableVenda1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        JtableVenda1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "DESCRITIVO", "QTD", "UND", "VALOR UNITARIO", "VALOR TOTAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JtableVenda1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JtableVenda1.setDoubleBuffered(true);
        JtableVenda1.setDragEnabled(true);
        JtableVenda1.setFocusable(false);
        JtableVenda1.setGridColor(new java.awt.Color(255, 255, 255));
        JtableVenda1.setRequestFocusEnabled(false);
        JtableVenda1.setRowHeight(18);
        JtableVenda1.setRowSelectionAllowed(false);
        JtableVenda1.setShowHorizontalLines(false);
        JtableVenda1.setShowVerticalLines(false);
        JtableVenda1.getTableHeader().setResizingAllowed(false);
        JtableVenda1.setUpdateSelectionOnSort(false);
        JtableVenda1.setVerifyInputWhenFocusTarget(false);
        JtableVenda1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JtableVenda1MouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(JtableVenda1);
        if (JtableVenda1.getColumnModel().getColumnCount() > 0) {
            JtableVenda1.getColumnModel().getColumn(0).setResizable(false);
            JtableVenda1.getColumnModel().getColumn(0).setPreferredWidth(20);
            JtableVenda1.getColumnModel().getColumn(1).setResizable(false);
            JtableVenda1.getColumnModel().getColumn(1).setPreferredWidth(230);
            JtableVenda1.getColumnModel().getColumn(2).setPreferredWidth(50);
            JtableVenda1.getColumnModel().getColumn(3).setResizable(false);
            JtableVenda1.getColumnModel().getColumn(3).setPreferredWidth(40);
            JtableVenda1.getColumnModel().getColumn(4).setResizable(false);
            JtableVenda1.getColumnModel().getColumn(4).setPreferredWidth(150);
            JtableVenda1.getColumnModel().getColumn(5).setPreferredWidth(120);
        }

        jtfDescritivoProduto1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jtfDescritivoProduto1.setInheritsPopupMenu(true);
        jtfDescritivoProduto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDescritivoProduto1ActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Valor R$:");

        jtfValorDeQuantidadeVezesValorDeVenda.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jtfValorDeQuantidadeVezesValorDeVenda.setInheritsPopupMenu(true);

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Total R$:");

        jtfValorTotal1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jtfValorTotal1.setInheritsPopupMenu(true);

        jtfQuantidadeAVender1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jtfQuantidadeAVender1.setInheritsPopupMenu(true);
        jtfQuantidadeAVender1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfQuantidadeAVender1ActionPerformed(evt);
            }
        });
        jtfQuantidadeAVender1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfQuantidadeAVender1KeyPressed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Descritivo:");

        jLabel14.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Quantidade/kg:");

        jLabel26.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Produto:");

        jtfValorDeVenda1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jtfValorDeVenda1.setInheritsPopupMenu(true);
        jtfValorDeVenda1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfValorDeVenda1ActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Preço Unitrio R$´/kg:");

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("=");

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("x");

        root.setLayout(new java.awt.CardLayout());

        jPanel2.setBackground(new java.awt.Color(255, 0, 0));

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 1130, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 87, Short.MAX_VALUE)
        );

        root.add(jPanel2, "inicio");

        jPanel3.setBackground(new java.awt.Color(255, 0, 0));
        jPanel3.setFocusTraversalPolicyProvider(true);

        jTextField4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jLabel7.setText("Desconto: ");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel7)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 291, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(731, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(22, 22, 22)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        root.add(jPanel3, "desconto");

        painelCliente.setBackground(new java.awt.Color(255, 0, 0));

        jtfCpfCliente.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 15)); // NOI18N
        jtfCpfCliente.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfCpfCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCpfClienteActionPerformed(evt);
            }
        });
        jtfCpfCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCpfClienteKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Informar Cpf Cliente:");

        org.jdesktop.layout.GroupLayout painelClienteLayout = new org.jdesktop.layout.GroupLayout(painelCliente);
        painelCliente.setLayout(painelClienteLayout);
        painelClienteLayout.setHorizontalGroup(
            painelClienteLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painelClienteLayout.createSequentialGroup()
                .add(23, 23, 23)
                .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jtfCpfCliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 901, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(46, 46, 46))
        );
        painelClienteLayout.setVerticalGroup(
            painelClienteLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painelClienteLayout.createSequentialGroup()
                .add(22, 22, 22)
                .add(painelClienteLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel3)
                    .add(jtfCpfCliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(32, 32, 32))
        );

        root.add(painelCliente, "painelCliente");

        jtfCodigoProduto.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jtfCodigoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodigoProdutoActionPerformed(evt);
            }
        });
        jtfCodigoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodigoProdutoKeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(60, 60, 60)
                .add(jLabel26))
            .add(jPanel1Layout.createSequentialGroup()
                .add(40, 40, 40)
                .add(jtfCodigoProduto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 280, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(jPanel1Layout.createSequentialGroup()
                .add(60, 60, 60)
                .add(jLabel25))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .add(root, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(jPanel1Layout.createSequentialGroup()
                .add(40, 40, 40)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jtfDescritivoProduto1)
                        .add(50, 50, 50))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(20, 20, 20)
                                        .add(jLabel14))
                                    .add(jtfQuantidadeAVender1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 290, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(30, 30, 30)
                                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(31, 31, 31)
                                        .add(jtfValorDeVenda1))
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(68, 68, 68)
                                        .add(jLabel27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                        .add(171, 171, 171))))
                            .add(jScrollPane8))
                        .add(27, 27, 27)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                .add(jLabel24)
                                .add(188, 188, 188))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(0, 0, Short.MAX_VALUE)
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                            .add(jPanel1Layout.createSequentialGroup()
                                                .add(jLabel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 156, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .add(52, 52, 52))
                                            .add(jPanel1Layout.createSequentialGroup()
                                                .add(lblImagemLogo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 245, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .add(34, 34, 34))))
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jtfValorTotal1)
                                            .add(jtfValorDeQuantidadeVezesValorDeVenda))))
                                .add(50, 50, 50))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(30, 30, 30)
                .add(jLabel26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(10, 10, 10)
                .add(jtfCodigoProduto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(jLabel25)
                .add(5, 5, 5)
                .add(jtfDescritivoProduto1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jtfValorDeVenda1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(jPanel1Layout.createSequentialGroup()
                            .add(jLabel14)
                            .add(5, 5, 5)
                            .add(jtfQuantidadeAVender1))
                        .add(jPanel1Layout.createSequentialGroup()
                            .add(20, 20, 20)
                            .add(jLabel2))
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel23)
                                    .add(jLabel27))
                                .add(5, 5, 5)
                                .add(jtfValorDeQuantidadeVezesValorDeVenda, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .add(25, 25, 25)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(28, 28, 28)
                        .add(jLabel24)
                        .add(5, 5, 5)
                        .add(jtfValorTotal1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(lblImagemLogo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 49, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(1, 1, 1)
                        .add(jScrollPane8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                        .add(10, 10, 10)))
                .add(root, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(10, 10, 10))
        );

        painelAreaTrablaho.add(jPanel1, "principal");

        menu.setBackground(new java.awt.Color(255, 0, 51));

        jScrollPane1.setAutoscrolls(true);

        jListaPagamentos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        jListaPagamentos.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 17)); // NOI18N
        jListaPagamentos.setForeground(new java.awt.Color(0, 0, 255));
        jListaPagamentos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListaPagamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListaPagamentosMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jListaPagamentosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jListaPagamentos);

        jLabel4.setText("Voltar");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel4MousePressed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 0, 0));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 0, 204));
        jLabel5.setText("Tipo De Pagamento:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 42, 11, 77);
        jPanel4.add(jLabel5, gridBagConstraints);

        org.jdesktop.layout.GroupLayout menuLayout = new org.jdesktop.layout.GroupLayout(menu);
        menu.setLayout(menuLayout);
        menuLayout.setHorizontalGroup(
            menuLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(menuLayout.createSequentialGroup()
                .add(27, 27, 27)
                .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(291, 291, 291)
                .add(jScrollPane1)
                .add(366, 366, 366))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, menuLayout.createSequentialGroup()
                .add(411, 411, 411)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(408, 408, 408))
        );
        menuLayout.setVerticalGroup(
            menuLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(menuLayout.createSequentialGroup()
                .add(48, 48, 48)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(menuLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(menuLayout.createSequentialGroup()
                        .add(455, 455, 455)
                        .add(jLabel4))
                    .add(menuLayout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 236, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(137, Short.MAX_VALUE))
        );

        painelAreaTrablaho.add(menu, "menu");

        jTextField1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N

        jTextField2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N

        jTextField3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jButton1.setText("Finalizar");

        jLabel6.setText("jLabel6");

        org.jdesktop.layout.GroupLayout finalizarLayout = new org.jdesktop.layout.GroupLayout(finalizar);
        finalizar.setLayout(finalizarLayout);
        finalizarLayout.setHorizontalGroup(
            finalizarLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, finalizarLayout.createSequentialGroup()
                .addContainerGap(411, Short.MAX_VALUE)
                .add(finalizarLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, finalizarLayout.createSequentialGroup()
                        .add(jLabel6)
                        .add(127, 127, 127)
                        .add(finalizarLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jTextField1)
                            .add(jTextField2)
                            .add(jTextField3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(373, 373, 373))
        );
        finalizarLayout.setVerticalGroup(
            finalizarLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(finalizarLayout.createSequentialGroup()
                .add(117, 117, 117)
                .add(finalizarLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6))
                .add(18, 18, 18)
                .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(28, 28, 28)
                .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(35, 35, 35)
                .add(jButton1)
                .addContainerGap(373, Short.MAX_VALUE))
        );

        painelAreaTrablaho.add(finalizar, "finalizar");

        jMenu2.setText("Menu  de operações");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        itmMostrarMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        itmMostrarMenu.setText("Mostrar Menu");
        itmMostrarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmMostrarMenuActionPerformed(evt);
            }
        });
        jMenu2.add(itmMostrarMenu);

        itmConsultar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, 0));
        itmConsultar.setText("Consultar");
        jMenu2.add(itmConsultar);

        itmAdicionarItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F12, 0));
        itmAdicionarItem.setText("Adicionar Item");
        itmAdicionarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmAdicionarItemActionPerformed(evt);
            }
        });
        jMenu2.add(itmAdicionarItem);

        itmEditar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        itmEditar.setText("Editar Item");
        jMenu2.add(itmEditar);

        itmExcluir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F9, 0));
        itmExcluir.setText("Excluir Item");
        itmExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmExcluirActionPerformed(evt);
            }
        });
        jMenu2.add(itmExcluir);

        itmFinalizarVenda.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        itmFinalizarVenda.setText("Finalizar Venda");
        itmFinalizarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmFinalizarVendaActionPerformed(evt);
            }
        });
        jMenu2.add(itmFinalizarVenda);

        jtmSelecionarCliente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jtmSelecionarCliente.setText("Selecionar Cliente");
        jtmSelecionarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtmSelecionarClienteActionPerformed(evt);
            }
        });
        jMenu2.add(jtmSelecionarCliente);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        jMenuItem1.setText("Voltar Para Home");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuItem1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jMenuItem1KeyPressed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        jMenuItem2.setText("Inserir Desconto");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painelAreaTrablaho)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(0, 0, 0)
                .add(painelAreaTrablaho))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed

    }//GEN-LAST:event_formKeyPressed

    private void itmExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmExcluirActionPerformed
        // TODO add your handling code here:

        ArrayList<Integer> linhasVerdadeiras = new ArrayList<>();
        int tamanho = JtableVenda1.getRowCount();
        DefaultTableModel modeloTabela = (DefaultTableModel) JtableVenda1.getModel();
        for (int i = 0; i < tamanho; i++) {
            if (JtableVenda1.getValueAt(i, 0).equals(true)) {
                // linhasVerdadeiras.add(JtableVenda.getValueAt(i, 1).toString());

                linhasVerdadeiras.add(i);
            }
        }
        System.out.println(linhasVerdadeiras.size());
        for (int i = linhasVerdadeiras.size() - 1; i >= 0; i--) {
            modeloTabela.removeRow(linhasVerdadeiras.get(i).intValue());
        }

        linhasVerdadeiras.clear();
        somarValoTotal();
        jtfAreaDeVendaProdutoCodigo1.grabFocus();
    }//GEN-LAST:event_itmExcluirActionPerformed

    private void itmMostrarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmMostrarMenuActionPerformed
        CardLayout card = (CardLayout) painelAreaTrablaho.getLayout();
        card.show(painelAreaTrablaho, "menu");
        jtfAreaDeVendaProdutoCodigo1.grabFocus();
    }//GEN-LAST:event_itmMostrarMenuActionPerformed

    private void itmAdicionarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmAdicionarItemActionPerformed
        DefaultTableModel modeloTabela = (DefaultTableModel) JtableVenda1.getModel();
        int qtd = 1;
        try {
            qtd = Integer.parseInt(jtfQuantidadeAVender1.getText());

            produtosTabela.add(produto);
            double valorVendaVezesquantidade=produto.getPreco_venda_produto() * qtd;
            modeloTabela.addRow(new Object[]{
                false,
                produto.getDescricao_produto(),
                qtd,
                "und",
                produto.getPreco_venda_produto(),
                String.valueOf(valorVendaVezesquantidade).format("%.2f",valorVendaVezesquantidade )
            });
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Campo esta Vazio", "Janela Padronizada", JOptionPane.ERROR_MESSAGE);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Campo so aceita uumeros", "Janela Padronizada", JOptionPane.ERROR_MESSAGE);
        }
        jtfValorDeVenda1.setText("");
        jtfDescritivoProduto1.setText("");
        jtfQuantidadeAVender1.setText("");
        jtfAreaDeVendaProdutoCodigo1.setText("");
        jtfValorDeQuantidadeVezesValorDeVenda.setText("");
        somarValoTotal();
        jtfAreaDeVendaProdutoCodigo1.grabFocus();

    }//GEN-LAST:event_itmAdicionarItemActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void itmFinalizarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmFinalizarVendaActionPerformed

        //daoPedido.SalvarPedido(gerarPedido(), jpa);
        if (jtfValorTotal1.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Não é possivel finalizar a venda, nenhum item adicionado a lista!");
        } else {
            finalizarVenda();
        }

    }//GEN-LAST:event_itmFinalizarVendaActionPerformed

    private void JtableVenda1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtableVenda1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_JtableVenda1MouseClicked

    private void jtfQuantidadeAVender1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfQuantidadeAVender1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfQuantidadeAVender1ActionPerformed

    private void jtfValorDeVenda1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfValorDeVenda1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfValorDeVenda1ActionPerformed

    private void jtfAreaDeVendaProdutoCodigo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfAreaDeVendaProdutoCodigo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfAreaDeVendaProdutoCodigo1ActionPerformed

    private void jtfAreaDeVendaProdutoCodigo1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfAreaDeVendaProdutoCodigo1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            try {
                produto = jpa.find(Produto.class, Integer.parseInt(jtfAreaDeVendaProdutoCodigo1.getText()));
                jtfValorDeVenda1.setText(produto.getPreco_venda_produto() + "");
                jtfDescritivoProduto1.setText(produto.getDescricao_produto());
                int qtd = 0;
                if (jtfQuantidadeAVender1.getText().equals("")) {
                    jtfQuantidadeAVender1.setText(1 + "");
                } else {
                    jtfQuantidadeAVender1.setText(jtfQuantidadeAVender1.getText() + "");
                }

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Impossivel Pesquisa por caractere", "Janela Padronizada", JOptionPane.ERROR_MESSAGE);
                jtfAreaDeVendaProdutoCodigo1.setText("");
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(null, "Produto nao está  cadastrado", "Janela Padronizada", JOptionPane.WARNING_MESSAGE);
                jtfAreaDeVendaProdutoCodigo1.setText("");
            }

        }
        // double qtd = Double.parseDouble(jtfQuantidadeAVender1.getText());
        //double v= Double.parseDouble(jtfValorDeVenda1.getText());
        // double c= qtd*v;
        //jtfValorDeQuantidadeVezesValorDeVenda.setText(String.valueOf(c));
        somarValoTotal();
        jtfAreaDeVendaProdutoCodigo1.grabFocus();
    }//GEN-LAST:event_jtfAreaDeVendaProdutoCodigo1KeyPressed

    private void jtfDescritivoProduto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDescritivoProduto1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfDescritivoProduto1ActionPerformed

    private void jtmSelecionarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtmSelecionarClienteActionPerformed

        CardLayout card = (CardLayout) root.getLayout();

        card.show(root, "painelCliente");
        jtfCpfCliente.grabFocus();
    }//GEN-LAST:event_jtmSelecionarClienteActionPerformed

    private void jtfCpfClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCpfClienteKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Factory fac = new Factory();
            Querys q = new Querys();

            clientep = q.QueryBuscarPorCPF(jtfCpfCliente.getText(), jpa);
            //   EntityManager jpa = fac.retornaEntidadegerenciada();
//            clientep = .find(Cliente.class, Integjpaer.parseInt(jtfCpfCliente.getText()));
            jtfCpfCliente.setText(clientep.getNome_cliente());
        }
    }//GEN-LAST:event_jtfCpfClienteKeyPressed

    private void jListaPagamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListaPagamentosMouseClicked

    }//GEN-LAST:event_jListaPagamentosMouseClicked

    private void jLabel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MousePressed
        CardLayout card = (CardLayout) painelAreaTrablaho.getLayout();
        card.show(painelAreaTrablaho, "principal");
    }//GEN-LAST:event_jLabel4MousePressed

    private void jListaPagamentosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListaPagamentosMousePressed

        pagamento = (Pagamento) jpa.createNativeQuery("select * from pagamento where tipo_pagamento = '" + jListaPagamentos.getSelectedValue().toString() + "'",
                Pagamento.class).getSingleResult();
//        JLabel lblMessage = new JLabel("Confimar tipo de  Pagamento para: '" + pagamento.getTipo_pagamento() + "'");
//
//        ImageIcon iconBtnNegar = new ImageIcon("src/images/icons8_delete_sign_16px.png");
//        JButton botaoNegar = new JButton(" Não ", iconBtnNegar);
//        ImageIcon iconBtnConfirmar = new ImageIcon("src/images/icons8_save_close_16px.png");
//        JButton botaoConfirmar = new JButton(" Confirmar ", iconBtnConfirmar);
//        Object[] obj = {botaoNegar, botaoConfirmar};
//        JDialog dialog = new JDialog();

//        
        int resposta = 0;
        // resposta = JOptionPane.showOptionDialog(null,"xx","Observer",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null,,null);

        resposta = JOptionPane.showConfirmDialog(this, "Venda será salva como " + jListaPagamentos.getSelectedValue().toString().toUpperCase() + "", "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        System.out.println(resposta);
        if (resposta == 1) {

        }
        if (resposta == 0) {
            try {
                FinalizarEtapaVenda();
            } catch (JRException ex) {
                Logger.getLogger(VendasFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

//        botaoNegar.addActionListener( new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                System.out.println("botao negar");
//            }
//        });
//       
//        botaoConfirmar.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                System.out.println("confirmar");
//               
//            }
//        });

        /* */
        CardLayout card = (CardLayout) root.getLayout();
        card.show(root, "inicio");


    }//GEN-LAST:event_jListaPagamentosMousePressed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        Principal pc = new Principal();
        pc.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jMenuItem1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1KeyPressed

    private void jtfCodigoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodigoProdutoActionPerformed

    private void jtfCodigoProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoKeyPressed
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            try {
                produto = jpa.find(Produto.class, Integer.parseInt(jtfCodigoProduto.getText()));
                jtfValorDeVenda1.setText(String.valueOf(produto.getPreco_venda_produto()).format("%.2f", produto.getPreco_venda_produto()));
                jtfDescritivoProduto1.setText(produto.getDescricao_produto());
                int qtd = 0;
                if (jtfQuantidadeAVender1.getText().equals("")) {
                    jtfQuantidadeAVender1.setText(1 + "");
                    
                    jtfValorDeQuantidadeVezesValorDeVenda.setText(String.valueOf(produto.getPreco_venda_produto()).format("%.2f",produto.getPreco_venda_produto() ));
                } else {
                    //jtfQuantidadeAVender1.setText(jtfQuantidadeAVender1.getText().format("%.2f", jtf) + "");
                    int quantidade=0;
                    try{
                        
                       quantidade= Integer.parseInt(jtfQuantidadeAVender1.getText()); 
                    }catch(NumberFormatException e){
                        quantidade= -1;
                       // JOptionPane.showMessageDialog(null,"O Campo de <quantidade> so pode recber numeros Inteiros maiores ou igual a 1", "alerta", JOptionPane.WARNING_MESSAGE);
                    }
                    if(quantidade<=0){
                         JOptionPane.showMessageDialog(null,"O Campo de <quantidade> so pode recber numeros Inteiros maiores ou igual a 1", "alerta", JOptionPane.WARNING_MESSAGE);
                    }else{
                        Double valor = quantidade*produto.getPreco_venda_produto();
                         jtfValorDeQuantidadeVezesValorDeVenda.setText(String.valueOf(valor).format("%.2f", valor));
                    }
                   
                }

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Impossivel Pesquisa por caractere", "Janela Padronizada", JOptionPane.ERROR_MESSAGE);
               jtfCodigoProduto.setText("");
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(null, "Produto nao está  cadastrado", "Janela Padronizada", JOptionPane.WARNING_MESSAGE);
               jtfCodigoProduto.setText("");
            }

        }
        // double qtd = Double.parseDouble(jtfQuantidadeAVender1.getText());
        //double v= Double.parseDouble(jtfValorDeVenda1.getText());
        // double c= qtd*v;
        //jtfValorDeQuantidadeVezesValorDeVenda.setText(String.valueOf(c));
        somarValoTotal();
        jtfCodigoProduto.grabFocus();
    }//GEN-LAST:event_jtfCodigoProdutoKeyPressed

    private void jtfCpfClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCpfClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCpfClienteActionPerformed

    private void jtfQuantidadeAVender1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfQuantidadeAVender1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
             int quantidade=0;
                    try{
                        
                       quantidade= Integer.parseInt(jtfQuantidadeAVender1.getText()); 
                    }catch(NumberFormatException e){
                        quantidade= -1;
                       // JOptionPane.showMessageDialog(null,"O Campo de <quantidade> so pode recber numeros Inteiros maiores ou igual a 1", "alerta", JOptionPane.WARNING_MESSAGE);
                    }
                    if(quantidade<=0){
                         JOptionPane.showMessageDialog(null,"O Campo de <quantidade> so pode recber numeros Inteiros maiores ou igual a 1", "alerta", JOptionPane.WARNING_MESSAGE);
                    }else{
                        Double valor = quantidade*produto.getPreco_venda_produto();
                         jtfValorDeQuantidadeVezesValorDeVenda.setText(String.valueOf(valor).format("%.2f", valor));
                    }
                   
        }
    }//GEN-LAST:event_jtfQuantidadeAVender1KeyPressed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
       CardLayout card  = (CardLayout) root.getLayout();
       card.show(root,"desconto");
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    public void FinalizarEtapaVenda() throws JRException {
        Pedido pedido = new Pedido();
        if (pagamento != null) {
            pedido.setValor_total_pedido(Double.parseDouble(jtfValorTotal1.getText().replaceAll(",", ".")));
            pedido.setPagamento(pagamento);

            if (clientep == null) {
                clientep = jpa.find(Cliente.class, 1);
            }
            pedido.setCliente(clientep);
            pedido.setUsuario(VerificacaoLoginUsuario.userStatic);
            jpa.getTransaction().begin();
            jpa.persist(pedido);
            jpa.getTransaction().commit();
            jpa.refresh(pedido);


             long  x = pedido.getId_pedido();

            PedidoProduto pedidoProduto = new PedidoProduto();

            criarPedidoProduto(pedido, pedidoProduto);
             
            //  JasperReport relatorio = (JasperReport)JRLoader.loadObjectFromFile("C:\\Users\\pedro\\JaspersoftWorkspace\\MyReports\\projeto.jasper");
            //JasperReport r = JasperCompileManager.compileReport( relat 
            
            HashMap params = new HashMap<>();
            params.put("idPedido", x);
           
            JasperPrint jp  = JasperFillManager.fillReport("src/relatorio/r/projeto_1.jasper", params, con);
            JasperViewer jv = new JasperViewer(jp,false);
            
            jv.setVisible(true);
            
        }
    }

    public void atualizarestoque(int id_produto, int quantidade, EntityManager jpa) {
        Querys queryProduto = new Querys();
        queryProduto.QueryAtualizarEstoque(id_produto, quantidade, jpa);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VendasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VendasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VendasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VendasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new VendasFrame().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(VendasFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(VendasFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Metodos

   

    public void somarValoTotal() {

        double valor = 0 ;
        for (int i = 0; i < JtableVenda1.getRowCount(); i++) {
            valor = valor + Double.parseDouble(JtableVenda1.getValueAt(i, 5).toString().replaceAll(",", "."));
        }
        if (valor == 0) {
            jtfValorTotal1.setText("");
        } else {
            Double v= valor;
            jtfValorTotal1.setText((v + "").format("%.2f", v));
        }

    }

    public void finalizarVenda() {

        if (clientep == null) {

            JLabel lblMessage = new JLabel("Venda será salva como Cliente padrao");
            Object[] texts = {lblMessage};

            int resposta = JOptionPane.showConfirmDialog(null, texts);
            if (JOptionPane.OK_OPTION == resposta) {
                try {
                    alimentarListaPagamento();
                    somarValoTotal();
                } catch (NullPointerException e) {
                    JOptionPane.showMessageDialog(null, "A venda Nao pode ser Finalizada!");
                    somarValoTotal();
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "A venda Nao pode ser Finalizada!");
                    somarValoTotal();
                }

                clientep = null;
                somarValoTotal();
            } else if (resposta == JOptionPane.CANCEL_OPTION) {
                clientep = null;
                somarValoTotal();
            } else {
                clientep = null;
                somarValoTotal();
            }

            clientep = null;
            somarValoTotal();
        } else {
            alimentarListaPagamento();

        }
    }

    public void assegurarInputs() {
        jtfDescritivoProduto1.setEditable(false);
        jtfValorDeQuantidadeVezesValorDeVenda.setEditable(false);
        jtfValorTotal1.setEditable(false);
        jtfValorDeVenda1.setEditable(false);

    }

    public void criarPedidoProduto(Pedido pedido, PedidoProduto pedidoProduto) {

        for (int i = 0; i < JtableVenda1.getRowCount(); i++) {
            pedidoProduto.setPedido(pedido);
            pedidoProduto.setProduto(produtosTabela.get(i));
            pedidoProduto.setQuantidade_pedido_produto(Integer.parseInt(JtableVenda1.getValueAt(i, 2).toString()));
            atualizarestoque(produtosTabela.get(i).getId_produto(), pedidoProduto.getQuantidade_pedido_produto(), jpa);
            jpa.getTransaction().begin();
            jpa.persist(pedidoProduto);
            jpa.getTransaction().commit();

            jpa.clear();

        }

        DefaultTableModel model = (DefaultTableModel) JtableVenda1.getModel();
        for (int i = JtableVenda1.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        clientep = null;
        somarValoTotal();

        CardLayout card = (CardLayout) painelAreaTrablaho.getLayout();
        card.show(painelAreaTrablaho, "principal");
    }

    public void alimentarListaPagamento() {
        CardLayout card = (CardLayout) painelAreaTrablaho.getLayout();
        card.show(painelAreaTrablaho, "menu");
        List<Pagamento> listaPagamentos = jpa.createNativeQuery(
                "SELECT * FROM pagamento",
                Pagamento.class).getResultList();
        DefaultListModel modelo = new DefaultListModel();

        for (int i = 0; i < listaPagamentos.size(); i++) {
            modelo.addElement(listaPagamentos.get(i).getTipo_pagamento());

        }
        jListaPagamentos.setModel(modelo);
    }
    
    private void pegarResolucao() {
        Toolkit t = Toolkit.getDefaultToolkit();
        Dimension dimensao = t.getScreenSize();
        this.setSize((dimensao.width + 5), (dimensao.height - 38));

 }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JtableVenda1;
    private javax.persistence.EntityManager entityManager1;
    private javax.swing.JPanel finalizar;
    private javax.swing.JMenuItem itmAdicionarItem;
    private javax.swing.JMenuItem itmConsultar;
    private javax.swing.JMenuItem itmEditar;
    private javax.swing.JMenuItem itmExcluir;
    private javax.swing.JMenuItem itmFinalizarVenda;
    private javax.swing.JMenuItem itmMostrarMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<String> jListaPagamentos;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jtfAreaDeVendaProdutoCodigo1;
    private javax.swing.JTextField jtfCodigoProduto;
    private javax.swing.JTextField jtfCpfCliente;
    private javax.swing.JTextField jtfDescritivoProduto1;
    private javax.swing.JTextField jtfQuantidadeAVender1;
    private javax.swing.JTextField jtfValorDeQuantidadeVezesValorDeVenda;
    private javax.swing.JTextField jtfValorDeVenda1;
    private javax.swing.JTextField jtfValorTotal1;
    private javax.swing.JMenuItem jtmSelecionarCliente;
    private javax.swing.JLabel lblImagemLogo;
    private javax.swing.JPanel menu;
    private javax.swing.JDesktopPane painelAreaTrablaho;
    private javax.swing.JPanel painelCliente;
    private javax.swing.JPanel root;
    // End of variables declaration//GEN-END:variables
}
